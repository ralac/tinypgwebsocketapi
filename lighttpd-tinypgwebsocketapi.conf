
#######################################################################
##
## tinypgwebsocketapi custom config
##

##
## Set file for stderr output from CGI processes
var.breakagelog = log_root + "breakage.log"
server.breakagelog = breakagelog

$HTTP["url"] =~ "\/app\/api\/.*\.log" {
     url.access-deny = ("")
}

$HTTP["url"] =~ "\/app\/api\/(.*(\.py$|\.sh$)|[^.]*$)" {
    ##
    ## Enable CGI upgrade
    cgi.upgrade = "enable"

    ##
    ## Disable stdin/stdout python buffering
    setenv.add-environment += ( "PYTHONUNBUFFERED" => "1")

    ##
    ## Avoid buffer entire request body before connecting to backend
    server.stream-request-body = 2

    ##
    ## Avoid buffer entire response body before sending to client
    server.stream-response-body = 2

    ##
    ## Enable sheel scripts
    cgi.assign += ( ".sh" => "/bin/bash")

    ##
    ## Enable executables
    cgi.assign += ( ""  => "")

    ##
    ## Enable PHP
    cgi.assign += ( ".php"  => "/usr/bin/php-cgi")

    ##
    ## tinypgwebsocketapi trace
    setenv.add-environment += ( "TRACE" => "enabled")

    ##
    ## tinypgwebsocketapi tail feature
    setenv.add-environment += ( "FILE_TO_TAIL" => breakagelog)

    ##
    ## tinypgwebsocketapi config
    setenv.add-environment += ( "READING_BUFFER_SIZE" => "16384")
    setenv.add-environment += ( "FD_POLLING_TIMEOUT" => "5")
    setenv.add-environment += ( "PG_URL" => "postgresql:///api_test?user=ralac&application_name=api_test")
    setenv.add-environment += ( "PG_FUNCTION" => "api.handler")
    setenv.add-environment += ( "CGI_SERVICE" => "unique")
}

##
#######################################################################
