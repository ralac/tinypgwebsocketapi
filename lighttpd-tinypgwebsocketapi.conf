
#######################################################################
##
## tinypgwebsocketapi custom config
##

##
## Set file for stderr output from CGI processes
var.breakagelog = log_root + "/breakage.log"
server.breakagelog = breakagelog

var.pg_url = "postgresql:///api_test?user=ralac&application_name=api_test"
var.pg_function = "api.handler"
var.tpgwsapi_service = "unique"

var.tpgwsapi_bin_path = server_root + "/htdocs/app/api/tpgwsapi-fcgi"

$HTTP["url"] =~ "\/app\/api\/.*\.log" {
     url.access-deny = ("")
}

fastcgi.debug = 1
fastcgi.server = (
    "/app/api/tpgwsapi-fcgi" => (
        "tpgwsapi.fcgi.handler" => (
            "host" => "127.0.0.1",
            "port" => 1026,
            "check-local" => "disable",
            "bin-path" => tpgwsapi_bin_path,
            "bin-environment" => (
                "TRACE" => "enabled",
                "PG_URL" => pg_url,
                "PG_FUNCTION" => pg_function,
                "TPGWSAPI_SERVICE" => tpgwsapi_service,
                "TPGWSAPI" => "FCGI"
            ),
            "kill-signal" => 10,
            "max-procs" => 1
        )
    )
)

$HTTP["url"] =~ "/app/api/(tinypgwebsocketapi|tpgwsapi$|printenv$)" {
    ##
    ## Enable CGI upgrade
    cgi.upgrade = "enable"

    ##
    ## Disable stdin/stdout python buffering
    setenv.add-environment += ( "PYTHONUNBUFFERED" => "1")

    ##
    ## Avoid buffer entire request body before connecting to backend
    server.stream-request-body = 2

    ##
    ## Avoid buffer entire response body before sending to client
    server.stream-response-body = 2

    ##
    ## Enable executables
    cgi.assign += ( ""  => "")

    ##
    ## Environment variables
    setenv.add-environment += ( "READING_BUFFER_SIZE" => "16384")
    setenv.add-environment += ( "FD_POLLING_TIMEOUT" => "5")
    setenv.add-environment += ( "TRACE" => "enabled")
    setenv.add-environment += ( "PG_URL" => pg_url)
    setenv.add-environment += ( "PG_FUNCTION" => pg_function)
    setenv.add-environment += ( "TPGWSAPI_SERVICE" => tpgwsapi_service)
    setenv.add-environment += ( "TPGWSAPI" => "CGI")
}

##
## tail log_root files
$HTTP["url"] =~ "/app/api/tail" {
    ##
    ## Enable sheel scripts
    cgi.assign += ( ".sh" => "/bin/bash")

    ##
    ## Avoid buffer entire request body before connecting to backend
    server.stream-request-body = 2

    ##
    ## Avoid buffer entire response body before sending to client
    server.stream-response-body = 2

    ##
    ## Environment variables
    $HTTP["querystring"] == "access" {
        setenv.add-environment += ( "FILE_TO_TAIL" => log_root + "/access.log" )
    }
    $HTTP["querystring"] == "error" {
        setenv.add-environment += ( "FILE_TO_TAIL" => log_root + "/error.log" )
    }
    $HTTP["querystring"] == "breakage" {
        setenv.add-environment += ( "FILE_TO_TAIL" => log_root + "/breakage.log" )
    }
}

##
## Enable PHP-CGI
cgi.assign += ( ".php"  => "/usr/bin/php-cgi")

##
#######################################################################
